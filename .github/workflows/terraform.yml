name: 'Terraform-Ubuntu-24.04'

on: workflow_dispatch

permissions:
  id-token: write
  issues: write
  pull-requests: write
  contents: read

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
   # environment: production

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    # defaults:
    #   run:
    #     shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v4
    
    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        cli_config_credentials_token: ${{ secrets.TERRAFORM_API_KEY }}

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run: terraform init
      working-directory: ${{github.workspace}} 

    # Checks that all Terraform configuration files adhere to a canonical format
    - name: Terraform Validate
      run: terraform validate
      working-directory: ${{github.workspace}}

    # Generates an execution plan for Terraform
    - name: Terraform Plan
      id: plan
      run: terraform plan
      # continue-on-error: true
      working-directory: ${{github.workspace}}

          # Generates an execution plan for Terraform
    - name: Terraform Apply
      id: apply
      run: terraform apply --auto-approve
      # continue-on-error: true
      working-directory: ${{github.workspace}}

    - name: Terraform Destroy
      id: destroy
      run: terraform destroy --auto-approve
      # continue-on-error: true
      working-directory: ${{github.workspace}}
